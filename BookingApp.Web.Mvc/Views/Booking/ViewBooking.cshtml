@model BookingApp.Core.Booking

<div>
    <h4>Booking</h4>

    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger" role="alert">
            @((ViewBag.Error as Exception).Message)
        </div>
    }

    @if (ViewBag.Warning != null)
    {
        <div class="alert alert-warning" role="alert">
            @ViewBag.Warning
        </div>
    }

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-success" role="alert">
            @ViewBag.Message
        </div>
    }
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd>
            <span id="@nameof(Model.Id)">
                @Html.DisplayFor(model => model.Id)
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BookingDate)
        </dt>
        <dd>
            <span id="@nameof(Model.BookingDate)">
                @Html.DisplayFor(model => model.BookingDate)
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.NumOfPeople)
        </dt>
        <dd>
            <span id="@nameof(Model.NumOfPeople)">
                @Html.DisplayFor(model => model.NumOfPeople)
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DietaryRequirements)
        </dt>
        <dd>
            @if (!Model.IsConfirmed && !Model.IsCancelled)
            {
                using (Html.BeginForm("DietaryRequirement", "Booking", FormMethod.Post))
                {
                    <div class="form-group">
                        <input name="Requirement" type="text" class="form-control" id="RequirementField" aria-describedby="dietaryHelp" placeholder="No requirements" value="@Model.DietaryRequirements">
                        <small id="dietaryHelp" class="form-text text-muted">Please enter any dietary requirement and click update</small>
                    </div>
                    <input type="hidden" name="BookingId" value="@Model.Id" />
                    <button type="submit" class="btn btn-primary">Update Dietary Requirement</button>
                }
            }
            else
            {
                @Html.DisplayFor(model => model.DietaryRequirements)
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CancellationFee)
        </dt>
        <dd>
            <span id="@nameof(Model.CancellationFee)">
                @Html.DisplayFor(model => model.CancellationFee)
            </span>
            <br /><i>Fee charged if confirmed and then cancelled</i>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreditCardDetails)
        </dt>
        <dd>
            <span id="@nameof(Model.CreditCardDetails)">
                @Html.DisplayFor(model => model.CreditCardDetails)
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsConfirmed)
        </dt>
        <dd>
            <span id="@nameof(Model.IsConfirmed)">
                @Html.DisplayFor(model => model.IsConfirmed)
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsCancelled)
        </dt>
        <dd>
            <span id="@nameof(Model.IsCancelled)">
                @Html.DisplayFor(model => model.IsCancelled)
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsConfirmationEmailSent)
        </dt>
        <dd>
            <span id="@nameof(Model.IsConfirmationEmailSent)">
                @Html.DisplayFor(model => model.IsConfirmationEmailSent)
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsCancellationFeeCharged)
        </dt>
        <dd>
            <span id="@nameof(Model.IsCancellationFeeCharged)">
                @Html.DisplayFor(model => model.IsCancellationFeeCharged)
            </span>
        </dd>
    </dl>
</div>
<div>
    @if (!Model.IsConfirmed && !Model.IsCancelled)
    {
        using (Html.BeginForm("Confirm", "Booking", FormMethod.Get))
        {
            <div class="form-group">
                <input name="creditcard" type="text" class="form-control" id="CreditCardField" placeholder="No credit card" value="@Model.CreditCardDetails">
            </div>
            <input type="hidden" name="id" value="@Model.Id" />
            <button type="submit" class="btn btn-primary">Confirm Booking</button>
        }
        <span>|</span>
    }

    @if (!Model.IsCancelled)
    {
        @Html.ActionLink("Cancel Booking", "Cancel", new { id = Model.Id })
        ;
        <span>|</span>
    }
    <a asp-action="Index">Back to List</a>
</div>
